{"variants":[{"paths":["\/documentation\/moovkit\/getting-started"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/moovkit\/getting-started"],"traits":[{"interfaceLanguage":"occ"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/io.moov.MoovKit\/documentation\/MoovKit"]]},"abstract":[{"text":"This guide walks you through the steps to integrate ","type":"text"},{"type":"strong","inlineContent":[{"text":"MoovKit","type":"text"}]},{"text":" into your iOS application to support ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Tap to Pay on iPhone"}]},{"text":".","type":"text"}],"sections":[],"primaryContentSections":[{"content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"thematicBreak"},{"anchor":"Project-Setup","text":"Project Setup","type":"heading","level":2},{"type":"aside","name":"Note","content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Important"}],"type":"strong"},{"type":"text","text":": The examples provided here have been deliberately simplified and are intended for illustrative purposes only."}],"type":"paragraph"}],"style":"note"},{"anchor":"1-Add-Package-Dependency","text":"1. Add Package Dependency","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Add the MoovKit SDK to your project via Swift Package Manager:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["https:\/\/github.com\/moovfinancial\/moov-ios"]},{"anchor":"2-Embed-Framework","text":"2. Embed Framework","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"In your app target settings, under ","type":"text"},{"type":"strong","inlineContent":[{"text":"Frameworks, Libraries, and Embedded Content","type":"text"}]},{"text":", set ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"MoovKit","type":"text"}]},{"text":" to ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Embed & Sign"}]},{"text":".","type":"text"},{"text":"\n","type":"text"},{"type":"image","identifier":"embed_sign"}]},{"anchor":"3-Link-Binary","text":"3. Link Binary","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"type":"emphasis","inlineContent":[{"text":"MoovKit","type":"text"}]},{"type":"text","text":" is listed under "},{"type":"strong","inlineContent":[{"type":"text","text":"Link Binary With Libraries"}]},{"type":"text","text":"."},{"type":"text","text":"\n"},{"type":"image","identifier":"link_binary"}]},{"anchor":"4-Add-Entitlements","text":"4. Add Entitlements","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Create an entitlements file at the root of your Xcode project and include the following:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["```xml","<?xml version=\"1.0\" encoding=\"UTF-8\"?>","<!DOCTYPE plist PUBLIC \"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\" \"http:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\">","<plist version=\"1.0\">","<dict>","    <key>com.apple.developer.proximity-reader.payment.acceptance<\/key>","    <true\/>","<\/dict>","<\/plist>","```"]},{"anchor":"5-Import-MoovKit","text":"5. Import MoovKit","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"In your Swift source:"}]},{"type":"codeListing","syntax":"swift","code":["import MoovKit"]},{"anchor":"6-Configure-Terminal-Provider","text":"6. Configure Terminal Provider","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Implement a terminal configuration provider and inject it into your ","type":"text"},{"code":"Moov","type":"codeVoice"},{"text":" instance. Moov provides a static configuration valid for 48 hours. You can use this static configuration for development while your backend integration with the Moov platform is in progress:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    static let terminalConfigurationProvider = StaticTerminalConfigurationProvider(terminalConfiguration: \"eyJjYXJkUmVhZGVyVG9rZW4iOiJleUpoYkdjaU9pSkZVekkxTmlJc0ltdHBaQ0k2SWpJeE56UmhZamcyTFRCaVpEVXRORGM0TWkxaU56RTJMVEUyWldVd1l6TXpOalptTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKaGRXUWlPaUpqWlhKMGFXWnBZMkYwYVc5dUxYQnZjeTEyTVNJc0ltVjRjQ0k2TVRjek56RTBPVFkyTml3aWFXRjBJam94TnpNMk9UYzJPRFkyTENKcWRHa2lPaUkyT0dSa1pERTRPQzFpTnpaakxUUm1OMk10T1RZME5pMWhPVEUzT1dWaFltTTFPVEFpTENKdFltNGlPaUpEYkdGemMySnZiMnRsY2lJc0ltMWpZeUk2TVRBd01Dd2liV2xrSWpvaU1USXpORFUyTnpnNU1ERXlNelExSWl3aWRIQnBaQ0k2SWpSak9EUXdNREF3TFRBd01EQXRNREF3TUMwd1pESmhMVGxpWXpRMk56TXpZbVpqTmlKOS5aakZlbjFURnNxNUhLR2ZEektienBZLWhpcjVCb3NpSVNGeHNJRzdxTEZZT09vUWNua2tzaWxab2FwM2RNbmU1VXB0bzFuckVQNkZnYjZYQjdZbDFiQSJ9\")","","    let moov = Moov(partnerAccountId: partnerAccountID, terminalConfigProvider: terminalConfigurationProvider)"]},{"type":"paragraph","inlineContent":[{"text":"For production use, fetch the configuration from your backend. Below is a sample implementation, assuming ","type":"text"},{"code":"PartnerClient","type":"codeVoice"},{"text":" is implemented to interact with your backend API:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import PartnerClient","import os","","class TerminalConfigProvider: TerminalConfigurationProvider {","    ","    let logger = Logger(subsystem: Bundle.main.bundleIdentifier!, category: \"main\")","    ","    var terminalConfiguration: String {","        get async throws {","            return try await fetch(terminalApplicationID: UUID(uuidString: \"7922ce07-daf3-48f2-aab3-ed878c76a1a3\")!)","        }","    }","","    let partnerClient: PartnerClient","    let partnerAccountID: UUID","    let merchantAccountID: UUID","","    public init(partnerClient: PartnerClient, partnerAccountID: UUID, merchantAccountID: UUID) {","        self.partnerClient = partnerClient","        self.partnerAccountID = partnerAccountID","        self.merchantAccountID = merchantAccountID","    }","","    func fetch(terminalApplicationID: UUID) async throws -> String {","        do {            ","            let terminalConfig = try await partnerClient.getTerminalConfiguration(","                accountID: merchantAccountID,","                terminalApplicationID: terminalApplicationID","            )","            return terminalConfig.configuration","        } catch {","            logger.error(\"\\(error)\")","            throw error","        }","    }","","}"]},{"anchor":"7-Register-Event-Handler","text":"7. Register Event Handler","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Set up an event handler to monitor initialization progress and other Tap to Pay events:"}]},{"type":"codeListing","syntax":"swift","code":["    moov.setEventHandler(eventHandler: { event in","        if case .updateProgress(let progress) = event {","            logger.info(\"Event \\(event.rawValue): \\(progress)\")","        } else {","            logger.info(\"Event \\(event.rawValue)\")","        }","    })"]},{"anchor":"8-Register-Telemetry-Collector","text":"8. Register Telemetry Collector","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Register a telemetry collector to observe the operation of MoovKit. Routing events through the application’s logging framework is recommended."},{"type":"text","text":" "},{"type":"text","text":"The application developer is responsible for implementing the functionality required to collect log data from devices."},{"type":"text","text":" "},{"type":"text","text":"Moov is able to provide diagnostic assistance for SDK-related issues only when telemetry data is available. To request support, contact support@moov.io"},{"type":"text","text":" "},{"type":"text","text":"and include the collected telemetry along with a detailed description of the issue."}]},{"type":"codeListing","syntax":"swift","code":["    moov.setTelemetryCollector(collector: { event, attribs in","        guard let attributes = attribs else {","            logger.info(\"\\(event)\")","            return","        }","        logger.info(\"\\(event) \\(attributes)\")","    })"]},{"anchor":"9-Initialize-Reader","text":"9. Initialize Reader","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Initialize the reader hardware:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    do {","        let identifier = try await moov.initReader()","        logger.debug(\"identifier \\(String(describing: identifier))\")","    } catch {","        logger.error(\"Failed to fetch identifier\")","    }"]},{"anchor":"10-Create-Payment-Session","text":"10. Create Payment Session","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Start a session after initializing the reader. If terms and conditions haven’t been accepted, the UI will prompt the merchant:"}]},{"type":"codeListing","syntax":"swift","code":["    do {","        try await moov.createSession()","        print(\"Session successfully created.\")                ","    } catch {","        showError(message: error.localizedDescription)","    }"]},{"anchor":"11-Read-a-Card","text":"11. Read a Card","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"After a session is created, read the payment card and obtain a token for transaction processing:"}]},{"type":"codeListing","syntax":"swift","code":["    do {","        let amt = Decimal(1.23)","        let authResponse = try await moov.createTapAuthorization(","            for: amount,","            currencyCode: CurrencyCode.USD,","            transactionType: .purchase,","            customerAccountID: UUID()","        )","        ","        \/\/ send authResponse.paymentToken to your backend to create a transfer","    } catch {","        logger.error(\"Card read error: \\(error)\")","        showError(message: error.localizedDescription)","    }"]},{"anchor":"12-Cleanup","text":"12. Cleanup","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"When the app moves to the background or when you need to release the MoovKit instance, it is important to close the reader to inform the operating system that the app has finished reading cards.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["   await self.moov.closeReader() "]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When the app returns to the foreground and a "},{"type":"codeVoice","code":"MoovKit"},{"type":"text","text":" instance already exists in memory, "},{"identifier":"#9-Initialize-Reader","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"identifier":"#10-Create-Payment-Session","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"anchor":"Youre-Ready-to-Tap-%F0%9F%8E%89","text":"You’re Ready to Tap 🎉","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Your app is now integrated with MoovKit and Tap to Pay on iPhone. Happy tapping!"}]}],"kind":"content"}],"metadata":{"modules":[{"name":"MoovKit"}],"roleHeading":"Article","title":"Getting Started","role":"article"},"identifier":{"url":"doc:\/\/io.moov.MoovKit\/documentation\/MoovKit\/Getting-Started","interfaceLanguage":"swift"},"kind":"article","references":{"#10-Create-Payment-Session":{"title":"create a new payment session","titleInlineContent":[{"type":"text","text":"create a new payment session"}],"identifier":"#10-Create-Payment-Session","type":"link","url":"#10-Create-Payment-Session"},"#9-Initialize-Reader":{"title":"reinitialize the reader","url":"#9-Initialize-Reader","type":"link","titleInlineContent":[{"type":"text","text":"reinitialize the reader"}],"identifier":"#9-Initialize-Reader"},"embed_sign":{"alt":"Embed framework","variants":[{"url":"\/images\/io.moov.MoovKit\/embed_sign.png","traits":["1x","light"]}],"identifier":"embed_sign","type":"image"},"link_binary":{"alt":"Link binary with libraries","variants":[{"url":"\/images\/io.moov.MoovKit\/link_binary.png","traits":["1x","light"]}],"identifier":"link_binary","type":"image"},"doc://io.moov.MoovKit/documentation/MoovKit":{"type":"topic","url":"\/documentation\/moovkit","identifier":"doc:\/\/io.moov.MoovKit\/documentation\/MoovKit","role":"collection","abstract":[],"kind":"symbol","title":"MoovKit"}},"variantOverrides":[{"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"op":"add","path":"\/topicSections"},{"value":null,"op":"add","path":"\/seeAlsoSections"}],"traits":[{"interfaceLanguage":"occ"}]}]}