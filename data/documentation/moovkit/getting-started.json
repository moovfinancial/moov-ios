{"identifier":{"url":"doc:\/\/io.moov.MoovKit\/documentation\/MoovKit\/Getting-Started","interfaceLanguage":"swift"},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"MoovKit"}],"title":"Getting Started"},"kind":"article","abstract":[{"type":"text","text":"This guide walks you through the steps to integrate "},{"inlineContent":[{"type":"text","text":"MoovKit"}],"type":"strong"},{"type":"text","text":" into your iOS application to support "},{"type":"strong","inlineContent":[{"type":"text","text":"Tap to Pay on iPhone"}]},{"text":".","type":"text"}],"sections":[],"primaryContentSections":[{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"thematicBreak"},{"text":"Project Setup","anchor":"Project-Setup","type":"heading","level":2},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Important"}]},{"text":": The examples provided here have been deliberately simplified and are intended for illustrative purposes only.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"},{"text":"1. Add Package Dependency","anchor":"1-Add-Package-Dependency","level":3,"type":"heading"},{"inlineContent":[{"text":"Add the MoovKit SDK to your project via Swift Package Manager:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["https:\/\/github.com\/moovfinancial\/moov-ios"],"type":"codeListing"},{"level":3,"anchor":"2-Embed-Framework","text":"2. Embed Framework","type":"heading"},{"inlineContent":[{"type":"text","text":"In your app target settings, under "},{"type":"strong","inlineContent":[{"type":"text","text":"Frameworks, Libraries, and Embedded Content"}]},{"type":"text","text":", set "},{"inlineContent":[{"text":"MoovKit","type":"text"}],"type":"emphasis"},{"text":" to ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Embed & Sign"}]},{"type":"text","text":"."},{"type":"text","text":"\n"},{"identifier":"embed_sign","type":"image"}],"type":"paragraph"},{"type":"heading","anchor":"3-Link-Binary","text":"3. Link Binary","level":3},{"inlineContent":[{"text":"Ensure ","type":"text"},{"inlineContent":[{"type":"text","text":"MoovKit"}],"type":"emphasis"},{"text":" is listed under ","type":"text"},{"inlineContent":[{"type":"text","text":"Link Binary With Libraries"}],"type":"strong"},{"type":"text","text":"."},{"type":"text","text":"\n"},{"type":"image","identifier":"link_binary"}],"type":"paragraph"},{"type":"heading","level":3,"text":"4. Add Entitlements","anchor":"4-Add-Entitlements"},{"inlineContent":[{"type":"text","text":"Create an entitlements file at the root of your Xcode project and include the following:"}],"type":"paragraph"},{"syntax":null,"code":["```xml","<?xml version=\"1.0\" encoding=\"UTF-8\"?>","<!DOCTYPE plist PUBLIC \"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\" \"http:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\">","<plist version=\"1.0\">","<dict>","    <key>com.apple.developer.proximity-reader.payment.acceptance<\/key>","    <true\/>","<\/dict>","<\/plist>","```"],"type":"codeListing"},{"text":"5. Import MoovKit","level":3,"type":"heading","anchor":"5-Import-MoovKit"},{"inlineContent":[{"text":"In your Swift source:","type":"text"}],"type":"paragraph"},{"code":["import MoovKit"],"type":"codeListing","syntax":"swift"},{"level":3,"text":"6. Configure Terminal Provider","anchor":"6-Configure-Terminal-Provider","type":"heading"},{"inlineContent":[{"type":"text","text":"Implement a terminal configuration provider and inject it into your "},{"type":"codeVoice","code":"Moov"},{"text":" instance. Moov provides a static configuration valid for 48 hours, which you can use for development while your backend integration with the Moov platform is in progress:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["    static let terminalConfigurationProvider = StaticTerminalConfigurationProvider(terminalConfiguration: \"eyJjYXJkUmVhZGVyVG9rZW4iOiJleUpoYkdjaU9pSkZVekkxTmlJc0ltdHBaQ0k2SWpJeE56UmhZamcyTFRCaVpEVXRORGM0TWkxaU56RTJMVEUyWldVd1l6TXpOalptTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKaGRXUWlPaUpqWlhKMGFXWnBZMkYwYVc5dUxYQnZjeTEyTVNJc0ltVjRjQ0k2TVRjek56RTBPVFkyTml3aWFXRjBJam94TnpNMk9UYzJPRFkyTENKcWRHa2lPaUkyT0dSa1pERTRPQzFpTnpaakxUUm1OMk10T1RZME5pMWhPVEUzT1dWaFltTTFPVEFpTENKdFltNGlPaUpEYkdGemMySnZiMnRsY2lJc0ltMWpZeUk2TVRBd01Dd2liV2xrSWpvaU1USXpORFUyTnpnNU1ERXlNelExSWl3aWRIQnBaQ0k2SWpSak9EUXdNREF3TFRBd01EQXRNREF3TUMwd1pESmhMVGxpWXpRMk56TXpZbVpqTmlKOS5aakZlbjFURnNxNUhLR2ZEektienBZLWhpcjVCb3NpSVNGeHNJRzdxTEZZT09vUWNua2tzaWxab2FwM2RNbmU1VXB0bzFuckVQNkZnYjZYQjdZbDFiQSJ9\")","","    let moov = Moov(partnerAccountId: partnerAccountID, terminalConfigProvider: terminalConfigurationProvider)"]},{"type":"paragraph","inlineContent":[{"text":"For production use, fetch the configuration from your backend. Below is a sample implementation, assuming ","type":"text"},{"code":"PartnerClient","type":"codeVoice"},{"text":" is implemented to interact with your backend API:","type":"text"}]},{"syntax":"swift","code":["import Foundation","import PartnerClient","import os","","class TerminalConfigProvider: TerminalConfigurationProvider {","    ","    let logger = Logger(subsystem: Bundle.main.bundleIdentifier!, category: \"main\")","    ","    var terminalConfiguration: String {","        get async throws {","            return try await fetch(terminalApplicationID: UUID(uuidString: \"7922ce07-daf3-48f2-aab3-ed878c76a1a3\")!)","        }","    }","","    let partnerClient: PartnerClient","    let partnerAccountID: UUID","    let merchantAccountID: UUID","","    public init(partnerClient: PartnerClient, partnerAccountID: UUID, merchantAccountID: UUID) {","        self.partnerClient = partnerClient","        self.partnerAccountID = partnerAccountID","        self.merchantAccountID = merchantAccountID","    }","","    func fetch(terminalApplicationID: UUID) async throws -> String {","        do {            ","            let terminalConfig = try await partnerClient.getTerminalConfiguration(","                accountID: merchantAccountID,","                terminalApplicationID: terminalApplicationID","            )","            return terminalConfig.configuration","        } catch {","            logger.error(\"\\(error)\")","            throw error","        }","    }","","}"],"type":"codeListing"},{"level":3,"anchor":"7-Register-Event-Handler","text":"7. Register Event Handler","type":"heading"},{"inlineContent":[{"type":"text","text":"Set up an event handler to monitor initialization progress and other Tap to Pay events:"}],"type":"paragraph"},{"code":["    moov.eventHandler = { event  in","        if case .updateProgress(let progress) = event {","            logger.info(\"Event \\(event.rawValue): \\(progress)\")","        } else {","            logger.info(\"Event \\(event.rawValue)\")","        }","    }"],"type":"codeListing","syntax":"swift"},{"anchor":"8-Initialize-Reader","text":"8. Initialize Reader","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Initialize the reader hardware:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["    do {","        let identifier = try await moov.initReader()","        logger.debug(\"identifier \\(String(describing: identifier))\")","    } catch {","        logger.error(\"Failed to fetch identifier\")","    }"]},{"text":"9. Create Payment Session","type":"heading","level":3,"anchor":"9-Create-Payment-Session"},{"inlineContent":[{"type":"text","text":"Start a session after initializing the reader. If T&Cs havenâ€™t been accepted, the UI will prompt the merchant:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["    do {","        try await moov.createSession()","        print(\"Session successfully created.\")                ","    } catch {","        showError(message: error.localizedDescription)","    }"]},{"type":"heading","text":"10. Read a Card","level":3,"anchor":"10-Read-a-Card"},{"type":"paragraph","inlineContent":[{"text":"After a session is created, read the payment card and obtain a token for transaction processing:","type":"text"}]},{"syntax":null,"type":"codeListing","code":["```swift","    do {","        let amt = Decimal(1.23)","        let authResponse = try await moov.createTapAuthorization(","            for: amount,","            currencyCode: CurrencyCode.USD,","            transactionType: .purchase,","            customerAccountID: UUID()","        )","        ","        \/\/ send authResponse.paymentToken to your backend to create a transfer","    } catch {","        logger.error(\"Card read error: \\(error)\")","        showError(message: error.localizedDescription)","    }","```"]},{"level":2,"anchor":"Youre-Ready-to-Tap-%F0%9F%8E%89","text":"Youâ€™re Ready to Tap ðŸŽ‰","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Your app is now integrated with MoovKit and Tap to Pay on iPhone. Happy tapping!"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/moovkit\/getting-started"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/moovkit\/getting-started"]}],"hierarchy":{"paths":[["doc:\/\/io.moov.MoovKit\/documentation\/MoovKit"]]},"references":{"embed_sign":{"variants":[{"traits":["1x","light"],"url":"\/images\/io.moov.MoovKit\/embed_sign.png"}],"identifier":"embed_sign","alt":"Embed framework","type":"image"},"link_binary":{"variants":[{"traits":["1x","light"],"url":"\/images\/io.moov.MoovKit\/link_binary.png"}],"identifier":"link_binary","alt":"Link binary with libraries","type":"image"},"doc://io.moov.MoovKit/documentation/MoovKit":{"identifier":"doc:\/\/io.moov.MoovKit\/documentation\/MoovKit","role":"collection","title":"MoovKit","url":"\/documentation\/moovkit","abstract":[],"type":"topic","kind":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"path":"\/topicSections","value":null,"op":"add"},{"value":null,"op":"add","path":"\/seeAlsoSections"}]}]}