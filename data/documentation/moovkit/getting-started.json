{"sections":[],"metadata":{"roleHeading":"Article","title":"Getting Started","role":"article","modules":[{"name":"MoovKit"}]},"hierarchy":{"paths":[["doc:\/\/io.moov.MoovKit\/documentation\/MoovKit"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/io.moov.MoovKit\/documentation\/MoovKit\/Getting-Started"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/moovkit\/getting-started"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/moovkit\/getting-started"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","abstract":[{"type":"text","text":"This guide walks you through the steps to integrate "},{"type":"strong","inlineContent":[{"text":"MoovKit","type":"text"}]},{"type":"text","text":" into your iOS application to support "},{"inlineContent":[{"type":"text","text":"Tap to Pay on iPhone"}],"type":"strong"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"thematicBreak"},{"level":2,"anchor":"Project-Setup","type":"heading","text":"Project Setup"},{"style":"note","content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Important"}],"type":"strong"},{"type":"text","text":": The examples provided here have been deliberately simplified and are intended for illustrative purposes only."}],"type":"paragraph"}],"type":"aside","name":"Note"},{"type":"heading","anchor":"1-Add-Package-Dependency","text":"1. Add Package Dependency","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the MoovKit SDK to your project via Swift Package Manager:"}]},{"type":"codeListing","code":["https:\/\/github.com\/moovfinancial\/moov-ios"],"syntax":null},{"text":"2. Embed Framework","level":3,"type":"heading","anchor":"2-Embed-Framework"},{"type":"paragraph","inlineContent":[{"text":"In your app target settings, under ","type":"text"},{"type":"strong","inlineContent":[{"text":"Frameworks, Libraries, and Embedded Content","type":"text"}]},{"text":", set ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"MoovKit","type":"text"}]},{"type":"text","text":" to "},{"type":"strong","inlineContent":[{"type":"text","text":"Embed & Sign"}]},{"text":".","type":"text"},{"text":"\n","type":"text"},{"type":"image","identifier":"embed_sign"}]},{"anchor":"3-Link-Binary","type":"heading","text":"3. Link Binary","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"inlineContent":[{"text":"MoovKit","type":"text"}],"type":"emphasis"},{"type":"text","text":" is listed under "},{"inlineContent":[{"type":"text","text":"Link Binary With Libraries"}],"type":"strong"},{"type":"text","text":"."},{"type":"text","text":"\n"},{"type":"image","identifier":"link_binary"}]},{"type":"heading","anchor":"4-Add-Entitlements","text":"4. Add Entitlements","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an entitlements file at the root of your Xcode project and include the following:"}]},{"code":["```xml","<?xml version=\"1.0\" encoding=\"UTF-8\"?>","<!DOCTYPE plist PUBLIC \"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\" \"http:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\">","<plist version=\"1.0\">","<dict>","    <key>com.apple.developer.proximity-reader.payment.acceptance<\/key>","    <true\/>","<\/dict>","<\/plist>","```"],"type":"codeListing","syntax":null},{"text":"5. Import MoovKit","type":"heading","anchor":"5-Import-MoovKit","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"In your Swift source:"}]},{"syntax":"swift","type":"codeListing","code":["import MoovKit"]},{"level":3,"text":"6. Configure Terminal Provider","type":"heading","anchor":"6-Configure-Terminal-Provider"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement a terminal configuration provider and inject it into your "},{"type":"codeVoice","code":"Moov"},{"text":" instance. Moov provides a static configuration valid for 48 hours. You can use this static configuration for development while your backend integration with the Moov platform is in progress:","type":"text"}]},{"code":["    static let terminalConfigurationProvider = StaticTerminalConfigurationProvider(terminalConfiguration: \"eyJjYXJkUmVhZGVyVG9rZW4iOiJleUpoYkdjaU9pSkZVekkxTmlJc0ltdHBaQ0k2SWpJeE56UmhZamcyTFRCaVpEVXRORGM0TWkxaU56RTJMVEUyWldVd1l6TXpOalptTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKaGRXUWlPaUpqWlhKMGFXWnBZMkYwYVc5dUxYQnZjeTEyTVNJc0ltVjRjQ0k2TVRjek56RTBPVFkyTml3aWFXRjBJam94TnpNMk9UYzJPRFkyTENKcWRHa2lPaUkyT0dSa1pERTRPQzFpTnpaakxUUm1OMk10T1RZME5pMWhPVEUzT1dWaFltTTFPVEFpTENKdFltNGlPaUpEYkdGemMySnZiMnRsY2lJc0ltMWpZeUk2TVRBd01Dd2liV2xrSWpvaU1USXpORFUyTnpnNU1ERXlNelExSWl3aWRIQnBaQ0k2SWpSak9EUXdNREF3TFRBd01EQXRNREF3TUMwd1pESmhMVGxpWXpRMk56TXpZbVpqTmlKOS5aakZlbjFURnNxNUhLR2ZEektienBZLWhpcjVCb3NpSVNGeHNJRzdxTEZZT09vUWNua2tzaWxab2FwM2RNbmU1VXB0bzFuckVQNkZnYjZYQjdZbDFiQSJ9\")","","    let moov = Moov(partnerAccountId: partnerAccountID, terminalConfigProvider: terminalConfigurationProvider)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For production use, fetch the configuration from your backend. Below is a sample implementation, assuming "},{"type":"codeVoice","code":"PartnerClient"},{"type":"text","text":" is implemented to interact with your backend API:"}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","import PartnerClient","import os","","class TerminalConfigProvider: TerminalConfigurationProvider {","    ","    let logger = Logger(subsystem: Bundle.main.bundleIdentifier!, category: \"main\")","    ","    var terminalConfiguration: String {","        get async throws {","            return try await fetch(terminalApplicationID: UUID(uuidString: \"7922ce07-daf3-48f2-aab3-ed878c76a1a3\")!)","        }","    }","","    let partnerClient: PartnerClient","    let partnerAccountID: UUID","    let merchantAccountID: UUID","","    public init(partnerClient: PartnerClient, partnerAccountID: UUID, merchantAccountID: UUID) {","        self.partnerClient = partnerClient","        self.partnerAccountID = partnerAccountID","        self.merchantAccountID = merchantAccountID","    }","","    func fetch(terminalApplicationID: UUID) async throws -> String {","        do {            ","            let terminalConfig = try await partnerClient.getTerminalConfiguration(","                accountID: merchantAccountID,","                terminalApplicationID: terminalApplicationID","            )","            return terminalConfig.configuration","        } catch {","            logger.error(\"\\(error)\")","            throw error","        }","    }","","}"]},{"level":3,"text":"7. Register Event Handler","type":"heading","anchor":"7-Register-Event-Handler"},{"type":"paragraph","inlineContent":[{"text":"Set up an event handler to monitor initialization progress and other Tap to Pay events:","type":"text"}]},{"code":["    moov.setEventHandler(eventHandler: { event in","        if case .updateProgress(let progress) = event {","            logger.info(\"Event \\(event.rawValue): \\(progress)\")","        } else {","            logger.info(\"Event \\(event.rawValue)\")","        }","    })"],"type":"codeListing","syntax":"swift"},{"anchor":"8-Register-Telemetry-Handler","text":"8. Register Telemetry Handler","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Set up a handler to monitor the operation of MoovKit:"}]},{"type":"codeListing","syntax":"swift","code":["    moov.setTelemetryCollector(collector: { message, attribs in","        guard let attributes = attribs else {","            logger.info(\"\\(message)\")","            return","        }","        logger.info(\"\\(message) \\(attributes)\")","    })"]},{"text":"9. Initialize Reader","anchor":"9-Initialize-Reader","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Initialize the reader hardware:"}]},{"syntax":"swift","code":["    do {","        let identifier = try await moov.initReader()","        logger.debug(\"identifier \\(String(describing: identifier))\")","    } catch {","        logger.error(\"Failed to fetch identifier\")","    }"],"type":"codeListing"},{"type":"heading","level":3,"anchor":"10-Create-Payment-Session","text":"10. Create Payment Session"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Start a session after initializing the reader. If terms and conditions havenâ€™t been accepted, the UI will prompt the merchant:"}]},{"syntax":"swift","code":["    do {","        try await moov.createSession()","        print(\"Session successfully created.\")                ","    } catch {","        showError(message: error.localizedDescription)","    }"],"type":"codeListing"},{"text":"11. Read a Card","type":"heading","anchor":"11-Read-a-Card","level":3},{"inlineContent":[{"type":"text","text":"After a session is created, read the payment card and obtain a token for transaction processing:"}],"type":"paragraph"},{"code":["```swift","    do {","        let amt = Decimal(1.23)","        let authResponse = try await moov.createTapAuthorization(","            for: amount,","            currencyCode: CurrencyCode.USD,","            transactionType: .purchase,","            customerAccountID: UUID()","        )","        ","        \/\/ send authResponse.paymentToken to your backend to create a transfer","    } catch {","        logger.error(\"Card read error: \\(error)\")","        showError(message: error.localizedDescription)","    }","```"],"syntax":null,"type":"codeListing"},{"text":"Youâ€™re Ready to Tap ðŸŽ‰","level":2,"anchor":"Youre-Ready-to-Tap-%F0%9F%8E%89","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Your app is now integrated with MoovKit and Tap to Pay on iPhone. Happy tapping!"}]}]}],"references":{"embed_sign":{"alt":"Embed framework","variants":[{"traits":["1x","light"],"url":"\/images\/io.moov.MoovKit\/embed_sign.png"}],"type":"image","identifier":"embed_sign"},"link_binary":{"alt":"Link binary with libraries","variants":[{"traits":["1x","light"],"url":"\/images\/io.moov.MoovKit\/link_binary.png"}],"type":"image","identifier":"link_binary"},"doc://io.moov.MoovKit/documentation/MoovKit":{"title":"MoovKit","url":"\/documentation\/moovkit","role":"collection","abstract":[],"type":"topic","identifier":"doc:\/\/io.moov.MoovKit\/documentation\/MoovKit","kind":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":null,"path":"\/topicSections","op":"add"},{"value":null,"op":"add","path":"\/seeAlsoSections"}]}]}